/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.yobennett.lambdaarchitectures.gallop.schema;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum BreedType implements org.apache.thrift.TEnum {
  AMERICAN_PAINT(1),
  AMERICAN_QUARTER(2),
  AMERICAN_SADDLEBRED(3),
  AMERICAN_STANDARDBRED(4),
  APPALOOSA(5),
  ARABIAN(6),
  CLYDESDALE(7),
  HANOVERIAN(8),
  MISSISSIPPI_FOX_TROTTER(9),
  MORGAN(10),
  PALOMINO(11),
  PERUVIAN_PASO(12),
  TENNESSEE_WALKING(13),
  THOROUGHBRED(14),
  PINTO(15),
  MUSTANG(16);

  private final int value;

  private BreedType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static BreedType findByValue(int value) { 
    switch (value) {
      case 1:
        return AMERICAN_PAINT;
      case 2:
        return AMERICAN_QUARTER;
      case 3:
        return AMERICAN_SADDLEBRED;
      case 4:
        return AMERICAN_STANDARDBRED;
      case 5:
        return APPALOOSA;
      case 6:
        return ARABIAN;
      case 7:
        return CLYDESDALE;
      case 8:
        return HANOVERIAN;
      case 9:
        return MISSISSIPPI_FOX_TROTTER;
      case 10:
        return MORGAN;
      case 11:
        return PALOMINO;
      case 12:
        return PERUVIAN_PASO;
      case 13:
        return TENNESSEE_WALKING;
      case 14:
        return THOROUGHBRED;
      case 15:
        return PINTO;
      case 16:
        return MUSTANG;
      default:
        return null;
    }
  }
}
